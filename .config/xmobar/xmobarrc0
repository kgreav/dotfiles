-- http://projects.haskell.org/xmobar/
-- install xmobar with these flags: --flags="with_alsa" --flags="with_mpd" --flags="with_xft"  OR --flags="all_extensions"
-- you can find weather location codes here: http://weather.noaa.gov/index.html

<<<<<<< Updated upstream
Config { font    = "xft:JetBrains Mono:pixelsize=16:antialias=true:hinting=true"
       , additionalFonts = ["xft:Inter Nerd Font:pixelsize=22:antialias=true:hinting=true"
                           , "xft:FontAwesome:pixelsize=16"
                           ]
       , bgColor = "#2e3440"
       , fgColor = "#e5e9f0"
       , position = Static { xpos = 0 , ypos = 0, width = 1920, height = 34 }
=======
Config { font    = "xft:JetBrains Mono:pixelsize=24:antialias=true:hinting=true"
       , additionalFonts = [
                 "xft:FiraCode Nerd Font:pixelsize=32:antialias=true:hinting=true"
               , "xft:FontAwesome:pixelsize=22"
                           ]
       , bgColor = "#2e3440"
       , fgColor = "#e5e9f0"
       , position = Static { xpos = 0 , ypos = 0, width = 3840, height = 44 }
>>>>>>> Stashed changes
       , lowerOnStart = True
       , hideOnStart = False
       , allDesktops = True
       , persistent = True
       , iconRoot = "/home/alourie/.xmonad/xpm/"  -- default: "."
       , commands = [
                      -- Time and date
                      Run Date "<fn=2>\xf073</fn> %b %d %Y - (%H:%M)" "date" 50
                      -- Network up and down
                    , Run Network "enp1s0" ["-t", "<fn=2>\xf0aa</fn> <rx>kb  <fn=2>\xf0ab</fn> <tx>kb"] 20
                      -- Cpu usage in percent
                    , Run Cpu ["-t", "<fn=2>\xf2db</fn> <total>%","-H","50","--high","red"] 20
                      -- Ram used number and percent
                    , Run Memory ["-t", "<fn=1>\xf233</fn> mem: <used>M (<usedratio>%)"] 20
                      -- Disk space free
                    , Run DiskU [("/", "<fn=2>\xf0a0</fn> <free>")] ["-L", "2", "-l", "red"] 60
                      -- Runs custom script to check for pacman updates.
                      -- This script is in my dotfiles repo in .local/bin.
                    , Run Com "/home/alourie/.local/bin/pacupdate" [] "pacupdate" 36000
                      -- Runs a standard shell command 'uname -r' to get kernel version
                    , Run Com "uname" ["-r"] "" 3600
                      -- Connects to XKB/X11 events for the layout selection
                    , Run Kbd []
                    , Run Com "/home/alourie/.config/xmobar/trayer-padding-icon.sh" [] "trayerpad" 10
                      -- Prints out the left side items such as workspaces, layout, etc.
                      -- The workspaces are 'clickable' in my configs.
                    , Run UnsafeStdinReader
                    ]
       , sepChar = "%"
       , alignSep = "}{"
<<<<<<< Updated upstream
       , template = "<action=`xdotool key control+alt+g`><fc=#ffbf76><fn=1>  </fn></fc></action><fc=#666666>|</fc> %UnsafeStdinReader% }<fc=#46d9ff>%date%</fc>{<fc=#ecbe7b> %cpu% </fc><fc=#666666>|</fc><fc=#51afef> %disku% </fc><fc=#666666>| </fc><fc=#f5a70a><fn=2></fn> %kbd%</fc>%trayerpad%"
=======
       , template = "<action=`xdotool key control+alt+g`><fc=#ffbf76><fn=1>  </fn></fc></action><fc=#666666>|</fc> %UnsafeStdinReader% }<fc=#46d9ff>%date%</fc>{ <fc=#ffffff><fn=2></fn> %kbd% </fc><fc=#666666><fn=1>|</fn></fc><fc=#ecbe7b> %cpu% </fc><fc=#666666><fn=1>|</fn></fc><fc=#51afef> %disku% </fc><fc=#666666><fn=1>|</fn></fc><fc=#c678dd> <fn=2></fn> %pacupdate% </fc><fc=#666666><fn=1>|</fn></fc>%trayerpad%"
>>>>>>> Stashed changes

-- unused modules
-- Kernel <fn=1>|</fn><fc=#b3afc2><fn=2></fn>  %uname% </fc>
-- Memory <fc=#666666> <fn=1>|</fn></fc> <fc=#ff6c6b> %memory% </fc>
-- Network <fc=#98be65> %enp1s0% </fc><fc=#666666> <fn=1>|</fn></fc>
-- Updates <fc=#c678dd> <fn=2></fn> %pacupdate% </fc>
